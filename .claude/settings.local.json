{
  "permissions": {
    "allow": [
      "Bash(find:*)",
      "Bash(ls:*)",
      "Bash(node:*)",
      "Bash(npm --version)",
      "Bash(yarn --version)",
      "Bash(yarn install)",
      "Bash(npm install:*)",
      "Bash(npm cache clean:*)",
      "Bash(pg_isready:*)",
      "Bash(npm run develop:*)",
      "Bash(rm:*)",
      "Bash(curl:*)",
      "Bash(pkill:*)",
      "WebFetch(domain:docs.strapi.io)",
      "Bash(cp:*)",
      "Bash(npx @strapi/upgrade codemods:*)",
      "Bash(npx @strapi/upgrade@latest major:*)",
      "Bash(npm run build:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(npx strapi:*)",
      "Bash(PGPASSWORD=1212 psql -h 127.0.0.1 -p 5432 -U postgres -d strapi-marketplace -c \"SELECT name FROM strapi_migrations ORDER BY time DESC LIMIT 10;\")",
      "Bash(PGPASSWORD=1212 psql -h 127.0.0.1 -p 5432 -U postgres -c \"CREATE DATABASE \\\"strapi-marketplace-v5\\\";\")",
      "Bash(grep:*)",
      "Bash(STRAPI_TRANSFER_URL=https://possue2-backend.onrender.com/admin STRAPI_TRANSFER_TOKEN=01e68a8657e83234d620f89e53a50213f6e74f49c8cc668fcf1371f9cd67281f0b713fd164e21f5d66fed9e33b9c0c700697e0a17c65ca8e71c860d7ccc50f2f301b29c1fe0d9162db4cd88ab8e3fbb3bb8fbd524afb2d72312787a146dd0458e7ce311bcb312592f6f763092f32fd3106412cd6d5d5ba58f33e9d67048d57bbe npx strapi transfer --to http://localhost:1337/admin --to-token 527bca4f52de45bc82c041f3b8d70112f05879bd9c4b44243fc16b14c6284780285933193c30bbb67a8638b6b35bfc5adf881bb482444b553b1835f0f2cd777d0f07730cbe1af4a13dae5df098da7875d5e842da6664bfeec607bd48c506a97ab5bcd51769ef61821838db9cc1df5d7aa92db944236e11e556740fc893d8bcca --force)",
      "Bash(PGPASSWORD=1212 psql -h 127.0.0.1 -p 5432 -U postgres -d strapi-marketplace-v5 -c \"SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name LIKE '%essay%' OR table_name LIKE '%subject%' OR table_name LIKE '%answer%';\")",
      "Bash(PGPASSWORD=1212 psql -h 127.0.0.1 -p 5432 -U postgres -d strapi-marketplace-v5 -c \"SELECT 'essays' as table_name, COUNT(*) as count FROM essays UNION ALL SELECT 'subjects', COUNT(*) FROM subjects UNION ALL SELECT 'answers', COUNT(*) FROM answers;\")",
      "Bash(STRAPI_TRANSFER_URL=https://possue2-backend.onrender.com/admin STRAPI_TRANSFER_TOKEN=01e68a8657e83234d620f89e53a50213f6e74f49c8cc668fcf1371f9cd67281f0b713fd164e21f5d66fed9e33b9c0c700697e0a17c65ca8e71c860d7ccc50f2f301b29c1fe0d9162db4cd88ab8e3fbb3bb8fbd524afb2d72312787a146dd0458e7ce311bcb312592f6f763092f32fd3106412cd6d5d5ba58f33e9d67048d57bbe npx strapi transfer --only content,files --force)",
      "Bash(PGPASSWORD=1212 psql -h 127.0.0.1 -p 5432 -U postgres -d strapi-marketplace -c \"SELECT table_name FROM information_schema.tables WHERE table_schema = ''public'' ORDER BY table_name;\")",
      "Bash(PGPASSWORD=1212 psql -h 127.0.0.1 -p 5432 -U postgres -d strapi-marketplace-v5 -c \"SELECT table_name FROM information_schema.tables WHERE table_schema = ''public'' ORDER BY table_name;\")",
      "Bash(PGPASSWORD=1212 psql -h 127.0.0.1 -p 5432 -U postgres -d strapi-marketplace -c \"SELECT 'subjects' as table_name, COUNT(*) as count FROM subjects UNION ALL SELECT 'essays', COUNT(*) FROM essays UNION ALL SELECT 'answers', COUNT(*) FROM answers UNION ALL SELECT 'admin_users', COUNT(*) FROM admin_users;\")",
      "Bash(PGPASSWORD=1212 psql -h 127.0.0.1 -p 5432 -U postgres -d strapi-marketplace-v5 -c \"SELECT COUNT(*) as count, 'subjects' as table_name FROM subjects UNION ALL SELECT COUNT(*), 'essays' FROM essays UNION ALL SELECT COUNT(*), 'answers' FROM answers UNION ALL SELECT COUNT(*), 'relationships' FROM essays_subjects_lnk;\")",
      "Bash(PGPASSWORD=1212 psql -h 127.0.0.1 -p 5432 -U postgres -d strapi-marketplace-v5 -c \"SELECT * FROM up_permissions WHERE action LIKE '%find%' LIMIT 5;\")",
      "Bash(PGPASSWORD=1212 psql -h 127.0.0.1 -p 5432 -U postgres -d strapi-marketplace-v5 -c \"SELECT id, firstname, lastname, email FROM admin_users;\")",
      "Bash(PGPASSWORD=1212 psql -h 127.0.0.1 -p 5432 -U postgres -d strapi-marketplace-v5 -c \"SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name LIKE '%subject%' ORDER BY table_name;\")",
      "Bash(PGPASSWORD=1212 psql -h 127.0.0.1 -p 5432 -U postgres -d strapi-marketplace-v5 -c \"DESCRIBE subjects;\")",
      "Bash(PGPASSWORD=1212 psql -h 127.0.0.1 -p 5432 -U postgres -d strapi-marketplace-v5 -c \"\\d subjects\")",
      "Bash(PGPASSWORD=1212 psql -h 127.0.0.1 -p 5432 -U postgres -d strapi-marketplace-v5 -c \"SELECT id, document_id, title FROM subjects LIMIT 5;\")",
      "Bash(PGPASSWORD=1212 psql -h 127.0.0.1 -p 5432 -U postgres -d strapi-marketplace-v5 -c \"SELECT id, document_id, title FROM subjects LIMIT 3;\")",
      "Bash(PGPASSWORD=1212 psql -h 127.0.0.1 -p 5432 -U postgres -d strapi-marketplace-v5 -c \"SELECT id, document_id, title, published_at FROM subjects WHERE published_at IS NOT NULL ORDER BY title ASC LIMIT 5;\")",
      "Bash(PGPASSWORD=1212 psql:*)",
      "Bash(tar:*)",
      "Bash(cat:*)",
      "Bash(mkdir:*)",
      "Bash(ssh:*)",
      "Bash(brew tap:*)",
      "Bash(brew install:*)",
      "Bash(dropdb:*)",
      "Bash(createdb:*)",
      "Bash(psql:*)",
      "WebFetch(domain:possue2-backend.onrender.com)",
      "Bash(npm search:*)",
      "Bash(sudo chown:*)",
      "Bash(yarn add:*)",
      "Bash(git rm:*)",
      "Bash(npm run strapi build:*)",
      "Bash(npm run strapi:*)",
      "Bash(pg_dump:*)",
      "Bash(kill:*)",
      "Bash(npm run start:*)",
      "Bash(git push:*)",
      "Bash(NODE_ENV=production npm run build)",
      "Bash(NODE_ENV=production node -e \"\nconst { parse } = require('pg-connection-string');\nconst { Client } = require('pg');\n\nconst config = parse(process.env.DATABASE_URL || 'postgres://possue:zY5Bx6s2D752UcM6oxIqnFIB6cD5JOqV@dpg-cbnfg29a6gds3kmf1qn0-a.oregon-postgres.render.com/possue2');\nconst client = new Client({\n  ...config,\n  ssl: { rejectUnauthorized: false }\n});\n\nasync function checkRoles() {\n  try {\n    await client.connect();\n    \n    // Check admin roles\n    const roles = await client.query('SELECT * FROM admin_roles');\n    console.log('Admin roles:', roles.rows);\n    \n    // Check admin_users_roles_lnk\n    const userRoles = await client.query('SELECT * FROM admin_users_roles_lnk');\n    console.log('User-role links:', userRoles.rows);\n    \n    // Check if tables exist\n    const tables = await client.query(`\n      SELECT table_name \n      FROM information_schema.tables \n      WHERE table_schema = 'public' \n      AND table_name LIKE 'admin_%'\n      ORDER BY table_name\n    `);\n    console.log('Admin tables:', tables.rows.map(r => r.table_name));\n    \n  } catch (error) {\n    console.error('❌ Error:', error.message);\n  } finally {\n    await client.end();\n  }\n}\n\ncheckRoles();\n\")",
      "Bash(NODE_ENV=production node -e \"\nconst { parse } = require('pg-connection-string');\nconst { Client } = require('pg');\n\nconst config = parse(process.env.DATABASE_URL || 'postgres://possue:zY5Bx6s2D752UcM6oxIqnFIB6cD5JOqV@dpg-cbnfg29a6gds3kmf1qn0-a.oregon-postgres.render.com/possue2');\nconst client = new Client({\n  ...config,\n  ssl: { rejectUnauthorized: false }\n});\n\nasync function checkTables() {\n  try {\n    await client.connect();\n    \n    const tables = await client.query(\n      \\\"SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name LIKE 'admin_%' ORDER BY table_name\\\"\n    );\n    console.log('Admin tables:', tables.rows.map(r => r.table_name));\n    \n    // Test if we can access the admin system\n    const testQuery = await client.query('SELECT 1 as test');\n    console.log('Query test successful:', testQuery.rows[0]);\n    \n  } catch (error) {\n    console.error('❌ Error:', error.message);\n  } finally {\n    await client.end();\n  }\n}\n\ncheckTables();\n\")",
      "Bash(NODE_ENV=production npm start)",
      "Bash(NODE_ENV=production node -e \"\nconst { parse } = require('pg-connection-string');\nconst { Client } = require('pg');\n\nconst config = parse(process.env.DATABASE_URL || 'postgres://possue:zY5Bx6s2D752UcM6oxIqnFIB6cD5JOqV@dpg-cbnfg29a6gds3kmf1qn0-a.oregon-postgres.render.com/possue2');\nconst client = new Client({\n  ...config,\n  ssl: { rejectUnauthorized: false }\n});\n\nasync function checkSubjects() {\n  try {\n    await client.connect();\n    \n    // Check for duplicate document_ids in subjects table\n    const duplicates = await client.query(`\n      SELECT document_id, COUNT(*) as count \n      FROM subjects \n      GROUP BY document_id \n      HAVING COUNT(*) > 1\n    `);\n    console.log('Duplicate document_ids:', duplicates.rows);\n    \n    // Check migration status\n    const migrations = await client.query(`\n      SELECT name, batch \n      FROM strapi_migrations \n      WHERE name LIKE '%discard-drafts%'\n    `);\n    console.log('Discard drafts migration status:', migrations.rows);\n    \n    // Count total subjects\n    const total = await client.query('SELECT COUNT(*) as count FROM subjects');\n    console.log('Total subjects:', total.rows[0].count);\n    \n  } catch (error) {\n    console.error('❌ Error:', error.message);\n  } finally {\n    await client.end();\n  }\n}\n\ncheckSubjects();\n\")",
      "Bash(NODE_ENV=production node fix-migration.js)",
      "Bash(NODE_ENV=production node fix-subjects-migration.js)",
      "Bash(NODE_ENV=production node create-missing-tables.js)",
      "WebFetch(domain:localhost)",
      "Bash(gzip:*)",
      "Bash(chmod:*)",
      "Bash(./backup-database.sh:*)",
      "Bash(/Applications/Postgres.app/Contents/Versions/17/bin/pg_restore --list backups/strapi-marketplace-v5-custom-20250622-003133.backup)",
      "Bash(true)",
      "Bash(npm ls:*)",
      "Bash(npm start)",
      "Bash(PGPASSWORD=eOFn8Omh5hjqbk8UxoGBA6xEul1Z0zxn psql -h dpg-d1can6re5dus73fcd83g-a.oregon-postgres.render.com -p 5432 -U possue2_db_v5_user -d possue2_db_v5 -c \"\\dt\")",
      "Bash(PGPASSWORD=eOFn8Omh5hjqbk8UxoGBA6xEul1Z0zxn psql -h dpg-d1can6re5dus73fcd83g-a.oregon-postgres.render.com -p 5432 -U possue2_db_v5_user -d possue2_db_v5 -c \"SELECT 'essays' as table_name, count(*) from essays UNION SELECT 'subjects', count(*) from subjects UNION SELECT 'answers', count(*) from answers;\")",
      "Bash(PGPASSWORD=eOFn8Omh5hjqbk8UxoGBA6xEul1Z0zxn psql -h dpg-d1can6re5dus73fcd83g-a.oregon-postgres.render.com -p 5432 -U possue2_db_v5_user -d possue2_db_v5 -c \"SELECT 'essays' as table_name, count(*) from essays UNION SELECT 'subjects', count(*) from subjects UNION SELECT 'answers', count(*) from answers;\")",
      "Bash(PGPASSWORD=eOFn8Omh5hjqbk8UxoGBA6xEul1Z0zxn psql -h dpg-d1can6re5dus73fcd83g-a.oregon-postgres.render.com -p 5432 -U possue2_db_v5_user -d possue2_db_v5 -c \"\nTRUNCATE essays_subjects_lnk, essays_answer_lnk, essays, answers, subjects RESTART IDENTITY CASCADE;\n\")",
      "Bash(PGPASSWORD=eOFn8Omh5hjqbk8UxoGBA6xEul1Z0zxn psql -h dpg-d1can6re5dus73fcd83g-a.oregon-postgres.render.com -p 5432 -U possue2_db_v5_user -d possue2_db_v5 -c \"SELECT 'essays' as table_name, count(*) from essays UNION SELECT 'subjects', count(*) from subjects UNION SELECT 'answers', count(*) from answers;\")",
      "Bash(npm view:*)",
      "Bash(npm run backup:selective:*)",
      "Bash(./scripts/sync-new-essays.sh:*)",
      "Bash(strapi build)",
      "Bash(PGPASSWORD=eOFn8Omh5hjqbk8UxoGBA6xEul1Z0zxn psql -h dpg-d1can6re5dus73fcd83g-a.oregon-postgres.render.com -p 5432 -U possue2_db_v5_user -d possue2_db_v5 -f /tmp/insert-draft-new-id.sql)",
      "Bash(PGPASSWORD=eOFn8Omh5hjqbk8UxoGBA6xEul1Z0zxn psql -h dpg-d1can6re5dus73fcd83g-a.oregon-postgres.render.com -p 5432 -U possue2_db_v5_user -d possue2_db_v5 -c \"SELECT COUNT(*) as remote_total FROM essays;\")",
      "Bash(PGPASSWORD=eOFn8Omh5hjqbk8UxoGBA6xEul1Z0zxn psql -h dpg-d1can6re5dus73fcd83g-a.oregon-postgres.render.com -p 5432 -U possue2_db_v5_user -d possue2_db_v5 -c \"SELECT COUNT(*) as published_count FROM essays WHERE published_at IS NOT NULL;\")",
      "Bash(PGPASSWORD=eOFn8Omh5hjqbk8UxoGBA6xEul1Z0zxn psql -h dpg-d1can6re5dus73fcd83g-a.oregon-postgres.render.com -p 5432 -U possue2_db_v5_user -d possue2_db_v5 -c \"SELECT document_id, COUNT(*) as versions, COUNT(CASE WHEN published_at IS NOT NULL THEN 1 END) as published_count, COUNT(CASE WHEN published_at IS NULL THEN 1 END) as draft_count FROM essays GROUP BY document_id HAVING COUNT(CASE WHEN published_at IS NULL THEN 1 END) = 0 ORDER BY document_id LIMIT 10;\")",
      "Bash(PGPASSWORD=eOFn8Omh5hjqbk8UxoGBA6xEul1Z0zxn psql -h dpg-d1can6re5dus73fcd83g-a.oregon-postgres.render.com -p 5432 -U possue2_db_v5_user -d possue2_db_v5 -f /tmp/missing-draft.sql)",
      "Bash(PGPASSWORD=eOFn8Omh5hjqbk8UxoGBA6xEul1Z0zxn psql -h dpg-d1can6re5dus73fcd83g-a.oregon-postgres.render.com -p 5432 -U possue2_db_v5_user -d possue2_db_v5 -c \"SELECT COUNT(DISTINCT document_id) as unique_published_essays FROM essays WHERE published_at IS NOT NULL;\")",
      "Bash(PGPASSWORD=eOFn8Omh5hjqbk8UxoGBA6xEul1Z0zxn psql -h dpg-d1can6re5dus73fcd83g-a.oregon-postgres.render.com -p 5432 -U possue2_db_v5_user -d possue2_db_v5 -c \"SELECT id, title, slug FROM essays WHERE slug IS NULL OR slug = '' LIMIT 5;\")",
      "Bash(PGPASSWORD=eOFn8Omh5hjqbk8UxoGBA6xEul1Z0zxn psql -h dpg-d1can6re5dus73fcd83g-a.oregon-postgres.render.com -p 5432 -U possue2_db_v5_user -d possue2_db_v5 -c \"SELECT COUNT(*) FROM essays_subjects_lnk;\")",
      "Bash(PGPASSWORD=eOFn8Omh5hjqbk8UxoGBA6xEul1Z0zxn psql -h dpg-d1can6re5dus73fcd83g-a.oregon-postgres.render.com -p 5432 -U possue2_db_v5_user -d possue2_db_v5 -c \"SELECT COUNT(DISTINCT id) FROM essays;\")",
      "Bash(PGPASSWORD=eOFn8Omh5hjqbk8UxoGBA6xEul1Z0zxn psql -h dpg-d1can6re5dus73fcd83g-a.oregon-postgres.render.com -p 5432 -U possue2_db_v5_user -d possue2_db_v5 -c \"SELECT created_by_id, updated_by_id FROM essays WHERE id = 1947;\")",
      "Bash(./scripts/fix-essay-sync.sh:*)",
      "Bash(PGPASSWORD=eOFn8Omh5hjqbk8UxoGBA6xEul1Z0zxn psql -h dpg-d1can6re5dus73fcd83g-a.oregon-postgres.render.com -p 5432 -U possue2_db_v5_user -d possue2_db_v5 -f /tmp/sync_subjects_fixed.sql)",
      "Bash(PGPASSWORD=eOFn8Omh5hjqbk8UxoGBA6xEul1Z0zxn psql -h dpg-d1can6re5dus73fcd83g-a.oregon-postgres.render.com -p 5432 -U possue2_db_v5_user -d possue2_db_v5 -f /tmp/sync_all_subjects.sql)",
      "Bash(PGPASSWORD=eOFn8Omh5hjqbk8UxoGBA6xEul1Z0zxn psql -h dpg-d1can6re5dus73fcd83g-a.oregon-postgres.render.com -p 5432 -U possue2_db_v5_user -d possue2_db_v5 -f /tmp/remove_duplicates_fixed.sql)",
      "Bash(PGPASSWORD=eOFn8Omh5hjqbk8UxoGBA6xEul1Z0zxn psql:*)",
      "WebFetch(domain:possue.com)",
      "Bash(touch:*)",
      "Bash(npm run seo:test:*)",
      "Bash(npm run seo:generate:*)",
      "Bash(render:*)",
      "Bash(openssl rand:*)"
    ],
    "deny": []
  }
}